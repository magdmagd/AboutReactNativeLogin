{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _expoStatusBar = require(\"expo-status-bar\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nrequire(\"react-native-gesture-handler\");\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Coding\\\\IDI\\\\AboutReactApp\\\\App.js\";\n\nvar Stack = (0, _stack.createStackNavigator)();\n\nvar Auth = function Auth() {\n  return _react.default.createElement(Stack.Navigator, {\n    initialRouteName: \"LoginScreen\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(Stack.Screen, {\n    name: \"LoginScreen\",\n    component: LoginScreen,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"RegisterScreen\",\n    component: RegisterScreen,\n    options: {\n      title: 'Register',\n      headerStyle: {\n        backgroundColor: '#307ecc'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n\nvar App = function App() {\n  return _react.default.createElement(_native.NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(Stack.Navigator, {\n    initialRouteName: \"SplashScreen\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(Stack.Screen, {\n    name: \"SplashScreen\",\n    component: SplashScreen,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"Auth\",\n    component: Auth,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"DrawerNavigationRoutes\",\n    component: DrawerNavigationRoutes,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar _default = App;\nexports.default = _default;","map":{"version":3,"sources":["D:/Coding/IDI/AboutReactApp/App.js"],"names":["Stack","Auth","LoginScreen","headerShown","RegisterScreen","title","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","styles","StyleSheet","create","container","flex","alignItems","justifyContent","App","SplashScreen","DrawerNavigationRoutes"],"mappings":";;;;;;;AAqHA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;AAKA,IAAMA,KAAK,GAAG,kCAAd;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAEjB,SACE,6BAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,SAAS,EAAEC,WAFb;AAGE,IAAA,OAAO,EAAE;AAACC,MAAAA,WAAW,EAAE;AAAd,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,6BAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,gBADP;AAEE,IAAA,SAAS,EAAEC,cAFb;AAGE,IAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAE,UADA;AAEPC,MAAAA,WAAW,EAAE;AACXC,QAAAA,eAAe,EAAE;AADN,OAFN;AAKPC,MAAAA,eAAe,EAAE,MALV;AAMPC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,UAAU,EAAE;AADI;AANX,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAuBD,CAzBD;;AA6BA,IAAMC,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETR,IAAAA,eAAe,EAAE,MAFR;AAGTS,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf;;AAUA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,SACE,6BAAC,2BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,6BAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,cADP;AAEE,IAAA,SAAS,EAAEC,YAFb;AAIE,IAAA,OAAO,EAAE;AAAChB,MAAAA,WAAW,EAAE;AAAd,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASE,6BAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAEF,IAFb;AAGE,IAAA,OAAO,EAAE;AAACE,MAAAA,WAAW,EAAE;AAAd,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAeE,6BAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,wBADP;AAEE,IAAA,SAAS,EAAEiB,sBAFb;AAIE,IAAA,OAAO,EAAE;AAACjB,MAAAA,WAAW,EAAE;AAAd,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF,CADF;AA0BD,CA3BD;;eA6Bee,G","sourcesContent":["/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n *\n * @format\n * @flow strict-local\n */\n\n\n/*import React from 'react';\nimport {\n  SafeAreaView,\n  StyleSheet,\n  ScrollView,\n  View,\n  Text,\n  StatusBar,\n} from 'react-native';\n\nimport {\n  Header,\n  LearnMoreLinks,\n  Colors,\n  DebugInstructions,\n  ReloadInstructions,\n} from 'react-native/Libraries/NewAppScreen';\n\nconst App: () => React$Node = () => {\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" />\n      <SafeAreaView>\n        <ScrollView\n          contentInsetAdjustmentBehavior=\"automatic\"\n          style={styles.scrollView}>\n          <Header />\n          {global.HermesInternal == null ? null : (\n            <View style={styles.engine}>\n              <Text style={styles.footer}>Engine: Hermes</Text>\n            </View>\n          )}\n          <View style={styles.body}>\n            <View style={styles.sectionContainer}>\n              <Text style={styles.sectionTitle}>Step One</Text>\n              <Text style={styles.sectionDescription}>\n                Edit <Text style={styles.highlight}>App.js</Text> to change this\n                screen and then come back to see your edits.\n              </Text>\n            </View>\n            <View style={styles.sectionContainer}>\n              <Text style={styles.sectionTitle}>See Your Changes</Text>\n              <Text style={styles.sectionDescription}>\n                <ReloadInstructions />\n              </Text>\n            </View>\n            <View style={styles.sectionContainer}>\n              <Text style={styles.sectionTitle}>Debug</Text>\n              <Text style={styles.sectionDescription}>\n                <DebugInstructions />\n              </Text>\n            </View>\n            <View style={styles.sectionContainer}>\n              <Text style={styles.sectionTitle}>Learn More</Text>\n              <Text style={styles.sectionDescription}>\n                Read the docs to discover what to do next:\n              </Text>\n            </View>\n            <LearnMoreLinks />\n          </View>\n        </ScrollView>\n      </SafeAreaView>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  scrollView: {\n    backgroundColor: Colors.lighter,\n  },\n  engine: {\n    position: 'absolute',\n    right: 0,\n  },\n  body: {\n    backgroundColor: Colors.white,\n  },\n  sectionContainer: {\n    marginTop: 32,\n    paddingHorizontal: 24,\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: '600',\n    color: Colors.black,\n  },\n  sectionDescription: {\n    marginTop: 8,\n    fontSize: 18,\n    fontWeight: '400',\n    color: Colors.dark,\n  },\n  highlight: {\n    fontWeight: '700',\n  },\n  footer: {\n    color: Colors.dark,\n    fontSize: 12,\n    fontWeight: '600',\n    padding: 4,\n    paddingRight: 12,\n    textAlign: 'right',\n  },\n});\n\nexport default App;*/\n\n\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport React from 'react';\nimport 'react-native-gesture-handler';\n\n\n\n\nconst Stack = createStackNavigator();\n\nconst Auth = () => {\n  // Stack Navigator for Login and Sign up Screen\n  return (\n    <Stack.Navigator initialRouteName=\"LoginScreen\">\n      <Stack.Screen\n        name=\"LoginScreen\"\n        component={LoginScreen}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"RegisterScreen\"\n        component={RegisterScreen}\n        options={{\n          title: 'Register', //Set Header Title\n          headerStyle: {\n            backgroundColor: '#307ecc', //Set Header color\n          },\n          headerTintColor: '#fff', //Set Header text color\n          headerTitleStyle: {\n            fontWeight: 'bold', //Set Header text style\n          },\n        }}\n      />\n    </Stack.Navigator>\n  );\n};\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\n\nconst App = () => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"SplashScreen\">\n        {/* SplashScreen which will come once for 5 Seconds */}\n        <Stack.Screen\n          name=\"SplashScreen\"\n          component={SplashScreen}\n          // Hiding header for Splash Screen\n          options={{headerShown: false}}\n        />\n        {/* Auth Navigator: Include Login and Signup */}\n        <Stack.Screen\n          name=\"Auth\"\n          component={Auth}\n          options={{headerShown: false}}\n        />\n        {/* Navigation Drawer as a landing page */}\n        <Stack.Screen\n          name=\"DrawerNavigationRoutes\"\n          component={DrawerNavigationRoutes}\n          // Hiding header for Navigation Drawer\n          options={{headerShown: false}}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"script"}