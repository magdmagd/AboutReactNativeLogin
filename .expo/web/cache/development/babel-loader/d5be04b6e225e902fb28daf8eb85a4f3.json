{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-community/async-storage\"));\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Coding\\\\IDI\\\\AboutReactApp\\\\Screen\\\\SplashScreen.js\";\n\nvar SplashScreen = function SplashScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = (0, _react.useState)(true),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      animating = _useState2[0],\n      setAnimating = _useState2[1];\n\n  (0, _react.useEffect)(function () {\n    setTimeout(function () {\n      setAnimating(false);\n\n      _asyncStorage.default.getItem('user_id').then(function (value) {\n        return navigation.replace(value === null ? 'Auth' : 'DrawerNavigationRoutes');\n      });\n    }, 5000);\n  }, []);\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    source: require('../Image/aboutreact.png'),\n    style: {\n      width: '90%',\n      resizeMode: 'contain',\n      margin: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_reactNative.ActivityIndicator, {\n    animating: animating,\n    color: \"#FFFFFF\",\n    size: \"large\",\n    style: styles.activityIndicator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }));\n};\n\nvar _default = SplashScreen;\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#307ecc'\n  },\n  activityIndicator: {\n    alignItems: 'center',\n    height: 80\n  }\n});","map":{"version":3,"sources":["D:/Coding/IDI/AboutReactApp/Screen/SplashScreen.js"],"names":["SplashScreen","navigation","animating","setAnimating","setTimeout","AsyncStorage","getItem","then","value","replace","styles","container","require","width","resizeMode","margin","activityIndicator","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","height"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;;;;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAAA,kBAED,qBAAS,IAAT,CAFC;AAAA;AAAA,MAE5BC,SAF4B;AAAA,MAEjBC,YAFiB;;AAInC,wBAAU,YAAM;AACdC,IAAAA,UAAU,CAAC,YAAM;AACfD,MAAAA,YAAY,CAAC,KAAD,CAAZ;;AAIAE,4BAAaC,OAAb,CAAqB,SAArB,EAAgCC,IAAhC,CAAqC,UAACC,KAAD;AAAA,eACnCP,UAAU,CAACQ,OAAX,CACED,KAAK,KAAK,IAAV,GAAiB,MAAjB,GAA0B,wBAD5B,CADmC;AAAA,OAArC;AAKD,KAVS,EAUP,IAVO,CAAV;AAWD,GAZD,EAYG,EAZH;AAcA,SACI,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,kBAAD;AACE,IAAA,MAAM,EAAEC,OAAO,CAAC,yBAAD,CADjB;AAEE,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE,KAAR;AAAeC,MAAAA,UAAU,EAAE,SAA3B;AAAsCC,MAAAA,MAAM,EAAE;AAA9C,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,6BAAC,8BAAD;AACE,IAAA,SAAS,EAAEb,SADb;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAEQ,MAAM,CAACM,iBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADJ;AAcC,CAhCL;;eAkCmBhB,Y;;;AAEnB,IAAMU,MAAM,GAAGO,wBAAWC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,eAAe,EAAE;AAJR,GADoB;AAO/BN,EAAAA,iBAAiB,EAAE;AACjBI,IAAAA,UAAU,EAAE,QADK;AAEjBG,IAAAA,MAAM,EAAE;AAFS;AAPY,CAAlB,CAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {  ActivityIndicator,  View,  StyleSheet,  Image} from 'react-native';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\n\r\nconst SplashScreen = ({navigation}) => {\r\n    //State for ActivityIndicator animation\r\n    const [animating, setAnimating] = useState(true);\r\n  \r\n    useEffect(() => {\r\n      setTimeout(() => {\r\n        setAnimating(false);\r\n        //Check if user_id is set or not\r\n        //If not then send for Authentication\r\n        //else send to Home Screen\r\n        AsyncStorage.getItem('user_id').then((value) =>\r\n          navigation.replace(\r\n            value === null ? 'Auth' : 'DrawerNavigationRoutes'\r\n          ),\r\n        );\r\n      }, 5000);\r\n    }, []);\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n          <Image\r\n            source={require('../Image/aboutreact.png')}\r\n            style={{width: '90%', resizeMode: 'contain', margin: 30}}\r\n          />\r\n          <ActivityIndicator\r\n            animating={animating}\r\n            color=\"#FFFFFF\"\r\n            size=\"large\"\r\n            style={styles.activityIndicator}\r\n          />\r\n        </View>\r\n      );\r\n    };\r\n\r\n    export default SplashScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#307ecc',\r\n  },\r\n  activityIndicator: {\r\n    alignItems: 'center',\r\n    height: 80,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"script"}